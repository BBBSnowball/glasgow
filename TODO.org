Build a RevC-light variant:

- GD32VF103CBT6 instead of Cypress -> USB FS instead of 2.0
  - connect ADC to all I/Os
  - use 2x DAC to replace I2C DACs
  - https://www.tme.eu/de/en/details/gd32vf103cbt6/microcontrollers-others/gigadevice/
- ICE40UP5K-SG48I instead of HX8K -> like RevB, no BGA
  - use LED drivers? one RGB LED may be enough
- still use individual buffers (like RevC)
- less I/Os: 8-10 instead of 16 in 1-2 banks
- smaller form factor: like USB stick / USB RS232 adapters / Sipeed USB-JTAG
  - as small as possible
  - 10-pin "Wannenstecker" on small edge
  - 10-pin 1.27 mm connector
  - 2-pin SYNC
  - using both sides is ok but all small parts should be on top for easy reflow soldering
    (QFNs, resistor arrays, TVS arrays)
- GND and VCC
  - TODO: in which position?
    - Sipeed is similar to USB blaster but without VCC
    - USB Blaster: GND on 2 and 10, VCC-IN on 4
    - AVR ISP 10pin: VCC on 2, GND on 4,5,6,8,10
    - AVR ISP 6pin: VCC on 2, GND on 6 -> shifted down by one: VCC on 4, GND on 8
    - ARM JTAG 10pin: similar to flipped AVR ISP 10pin, i.e. VCC on 1, GND on 3,5,9
    - PMOD: GND on 9 and 10, VCC on 11 and 12
    - Original has separate Vsense and VIO.
  - option to switch them off and use that pin as an input?
    -> jumper or FET or enable-pin of LDO
- simple modes without bitstream?
  - GD32 could do RS232 and probably JTAG without any fancy software on the host.
- host protocol
  - option 1: like the Cypress
  - option 2: CDC/ACM
  - option 3: ethernet with RNDIS and CDC-ECM
    - Main page is loaded from external source. GD32 provides DHCP, DNS/avahi, index.html, REST interface.
    - Try to enable local caching via manifest/web worker.
    - Upload simple bitstream, e.g. for USB-UART.
    - How much can we do in the web browser? -> run Yosys? remote Yosys?
      http://yowasp.org/
    - Segger has software for USB ethernet (expensive and not open, of course), which takes ~30 kB
      of RAM so USB ethernet is probably not a realistic option for an MCU with only 32 kB of RAM.
    - Implement gdb protocol for RISC-V - I don't think, this will work in 32 kB of RAM.
- replace INA233?
  - not available on lcsc or digikey
  - expensive
  - alternative: resistor divider before and after shunt
  - very imprecise:
    v1 = 5
    v2 = 5 - x*0.1
    2% in each resistor divider is 0.1V -> error of 200%
  - ZXCT1107 sieht gut aus und gibt's bei lcsc und TME.
    https://datasheet.lcsc.com/szlcsc/Diodes-Incorporated-ZXCT1107SA-7_C82766.pdf
  - INA180 ist günstiger, aber wir wollen eher A1 und den gibt's nicht bei lcsc.
    https://lcsc.com/product-detail/PMIC-Current-Power-Monitors-Regulators_Texas-Instruments-Texas-Instruments-INA180A3IDBVR_C122882.html
  - INA199A1 wäre bidirektional.
    - Der braucht dann aber eine Referenzspannung und wenn ich mir die mit einem Spannungsteiler baue,
      dann passt evtl der Nullpunkt nicht gut. Das könnte verwirrend sein.
  - Also wohl ein INA180A3 mit 100 V/V als Gain.
    3V/100/0.5A = 60 mOhm
  - lcsc hat 50mOhm und 47mOhm mit 1% und 0603.
  - Ich sollte dann wohl möglichst den mit 400ppm/K nehmen, weil 1200ppm/K sind noch mal nen Prozent mehr bei 10 K.
    https://lcsc.com/product-detail/Chip-Resistor-Surface-Mount_YAGEO-PT0603FR-7W0R05L_C784595.html
  - Oh, A2 gibts doch.
- missing features:
  - reset button (at least the "emergency off" feature that disables the LDOs)
  - less channels
  - only one VIO bank
  - much slower
  - smaller FPGA
  - no EEPROMs
  - no ATECC508A
  - INA233 replaced by lower-quality solution
  - weak pulldown on all pins if ADC feature is placed
- power sequencing
  - I use the FPGA of RevB so we *do* need that.
  - LM3880 is quite expensive.
  - option 1: use it anyway
  - option 2: use two regulators for 3V3 and enable it with GD32
  - option 3: LDO for 1V2 -> PT1 -> EN of LDO for 3V3
    - datasheet says >=1V on EN pin
    - We should probably add a discharge resistor.
    - This is still likely to fail on brown-out. The GD32 can reset the FPGA in that case but this
      isn't guaranteed to work.

- pinout revB:
  - see https://github.com/GlasgowEmbedded/glasgow/blob/9fff92ddfbfd309c62aaf3e4170a904e4a426382/firmware/glasgow.h
  - A0: ALERT (INT for I2C)
  - A3: FPGA_CDONE
    FPGA: CDONE
  - A1: FPGA_CRESET (REVC)
  - B2: SI
    FPGA: SPI_SI
  - B3: SS_N
    FPGA: SPI_SS
  - B4: SCK
    FPGA: SPI_SCK
  - B5: not present in header
    FPGA: SPI_SO
  - D0: ENVA (enable supply for port A)
  - D1: FPGA_CRESET (REVB)
  - D2: led
  - D3: ^^
  - D4: ^^
  - D5: ^^
  - D6: ENVB (enable supply for port B)
  - D7: OEQ_N_REVAB -> direction for all ports

  - IFCLK: CLKIF
    FPGA: G3
  - CLKOUT: CLKREF
    FPGA: G6

  - of these, we need: SPI_SI, SPI_SS, SPI_SCK, CRESET
  - we should also have: SPI_SO, CDONE

- How does configuration work for ICE40? Which pins do we need?
  - http://www.latticesemi.com/-/media/LatticeSemi/Documents/ApplicationNotes/IK/FPGA-TN-02001-30-iCE40-Programming-Configuration.ashx?document_id=46502
  - Glasgow seems to be using Slave SPI mode, i.e. FX2 is SPI master.
    https://github.com/GlasgowEmbedded/glasgow/blob/master/firmware/fpga.c#L68
  - SPI_SS_B must be low after reset to select Slave SPI mode.
  - We should enable a pullup for CDONE in the MCU because the FPGA only has a very weak pullup.

  - SPI can use arbitrary pins so we can use the same ones as for config. The LM devices don't
    support arbitrary pins but the fixed ones are the same ones as the config pins.
  - file:///home/user/Downloads/FPGA-TN-02010-1-7-iCE40-I2C-and-SPI-Hardened-IP-Usage-Guide.pdf

  - The datasheet doesn't mention JTAG at all. Don't they have any JTAG port? -> Indeed they don't.
    https://stackoverflow.com/questions/49840479/lattice-ice40-jtag

  - Interface to the SPI hard IP:
    https://www.latticesemi.com/-/media/LatticeSemi/Documents/ApplicationNotes/AD/AdvancediCE40SPII2CHardenedIPUsageGuide.ashx?document_id=50117
    http://www.clifford.at/icestorm/ultraplus.html
  - https://github.com/damdoy/ice40_ultraplus_examples/tree/master/spi_hw
    https://github.com/damdoy/ice40_ultraplus_examples/blob/master/spi_hw/top.v
  - I'm not sure whether the hard IP saves an logic at all for a slave...

  - GD32: USART has a max frequency of 6.75 MHz so we definetely want the SPI with 27 MHz.

- pinout for FPGA:
  - available: 39 GPIO
  - 2x I2C
  - 5x JTAG
  - 4x SPI
  - 8x DATA I/O
  - 8x DATA direction
  - 3x LED
  - sum: 30

  - We could connect the pullup/down to the FPGA but they should run at VIO.
  - This would require one I2C chip per bank, though.

- pinout of GD32V:
  - 2x DAC
  - 8x ADC
  - 3x USB
  - 4-5x JTAG for GD32
  - 4-5x JTAG for FPGA
  - >4x interface to FPGA: normal SPI because GD32 doesn't support QSPI
  - 2x I2C
  - 1x LED
  - 2x ENA for VIO LDO
  - 1x ENA for 3V3 for FPGA
  - sum: 32

  - This claims that BOOT0 is also connected to PA8. This seems to be the case for the dev board, at least
    (although this connection is not present in the schematic). If the SoC has any connection between these
    pins, this would be very relevant.
    https://www.susa.net/wordpress/2019/10/longan-nano-gd32vf103/

  QFN48 - not complete for pins that have a fixed function already.

  TODO: 2x ENA, 1x ENA

  | pin | name          | ADC | DAC | SPI  | UART   |     | TIMER | special           | used as?   |
  |-----+---------------+-----+-----+------+--------+-----+-------+-------------------+------------|
  |   1 | Vbat          |     |     |      |        |     |       | supply            | S          |
  |   2 | PC13          |     |     |      |        |     |       | RTC               | !! free !! |
  |   3 | OSC32IN/PC14  |     |     |      |        |     |       | RTC               | !! free !! |
  |   4 | OSC32OUT/PC15 |     |     |      |        |     |       | RTC               | !! free !! |
  |   5 | OSCIN         |     |     |      |        |     |       |                   | OSC        |
  |   6 | OSCOUT        |     |     |      |        |     |       |                   | OSC        |
  |   7 | NRST          |     |     |      |        |     |       | reset             | S          |
  |   8 | VSSA          |     |     |      |        |     |       | supply            | S          |
  |   9 | VDDA          |     |     |      |        |     |       | supply            | S          |
  |  10 | PA0           |  01 |     |      |        |     |       |                   | ADC        |
  |  11 | PA1           |  01 |     |      |        |     |       |                   | ADC        |
  |  12 | PA2           |  01 |     |      | TX     |     |       |                   | ADC, TX    |
  |  13 | PA3           |  01 |     |      | RX     |     |       |                   | ADC, RX    |
  |  14 | PA4           |  01 |   0 | NSS  | CK     |     |       |                   | DAC!       |
  |  15 | PA5           |  01 |   1 | SCK  |        |     |       |                   | DAC!       |
  |  16 | PA6           |  01 |     | MISO |        |     |       |                   | ADC        |
  |  17 | PA7           |  01 |     | MOSI |        |     |       |                   | ADC        |
  |  18 | PB0           |  01 |     |      |        |     |       |                   | ADC        |
  |  19 | PB1           |  01 |     |      |        |     |       |                   | ADC        |
  |  20 | PB2           |     |     |      |        |     |       | BOOT1             | B (free)   |
  |  21 | PB10          |     |     |      | TX     | SCL |     1 |                   | I2C        |
  |  22 | PB11          |     |     |      | RX     | SDA |     1 |                   | I2C        |
  |  23 | VSS           |     |     |      |        |     |       | supply            | S          |
  |  24 | VDD           |     |     |      |        |     |       | supply            | S          |
  |  25 | PB12          |     |     | NSS  | CK     |     |       |                   | SPI        |
  |  26 | PB13          |     |     | SCK  |        |     |     0 |                   | SPI        |
  |  27 | PB14          |     |     | MISO |        |     |     0 |                   | SPI        |
  |  28 | PB15          |     |     | MOSI |        |     |     0 |                   | SPI        |
  |  29 | PA8           |     |     |      | CK     |     |     0 | CK_OUT0, (BOOT0?) | CLKOUT     |
  |  30 | PA9           |     |     |      | TX, BL |     |     0 | USB_VBUS          | USB        |
  |  31 | PA10          |     |     |      | RX, BL |     |     0 | (USB_ID)          | LED        |
  |  32 | PA11          |     |     |      |        |     |     0 | USB D-            | USB        |
  |  33 | PA12          |     |     |      |        |     |     0 | USB D+            | USB        |
  |  34 | PA13          |     |     |      |        |     |       | JTAG              | JTAG MCU   |
  |  35 | VSS           |     |     |      |        |     |       | supply            | S          |
  |  36 | VDD           |     |     |      |        |     |       | supply            | S          |
  |  37 | PA14          |     |     |      |        |     |       | JTAG              | JTAG MCU   |
  |  38 | PA15          |     |     | NSS  |        |     |       | JTAG              | JTAG MCU   |
  |  39 | PB3           |     |     | SCK  |        |     |       | JTAG              | JTAG MCU   |
  |  40 | PB4           |     |     | MISO |        |     |       | (JTAG)            | (JTAG MCU) |
  |  41 | PB5           |     |     | MOSI |        |     |     2 |                   | JTAG FPGA  |
  |  42 | PB6           |     |     |      | TX     | SCL |     3 |                   | JTAG FPGA  |
  |  43 | PB7           |     |     |      | RX     | SDA |     3 |                   | JTAG FPGA  |
  |  44 | BOOT0         |     |     |      |        |     |       | BOOT0             | S          |
  |  45 | PB8           |     |     |      |        | SCL |     3 |                   | JTAG FPGA  |
  |  46 | PB9           |     |     |      |        | SDA |     3 |                   | JTAG FPGA  |
  |  47 | VSS           |     |     |      |        |     |       | supply            | S          |
  |  48 | VDD           |     |     |      |        |     |       | supply            | S          |

GD32VF103TBU6, QFN36
  |  pin | name   | ADC | DAC | SPI  | UART   |     | TIMER | special           | used as?        |
  |------+--------+-----+-----+------+--------+-----+-------+-------------------+-----------------|
  |    2 | OSCIN  |     |     |      |        |     |       |                   | OSC             |
  |    3 | OSCOUT |     |     |      |        |     |       |                   | OSC             |
  |    4 | NRST   |     |     |      |        |     |       | reset             | S               |
  |    5 | VSSA   |     |     |      |        |     |       | supply            | S               |
  |    6 | VDDA   |     |     |      |        |     |       | supply            | S               |
  |    7 | PA0    |  01 |     |      |        |     |       |                   | ADC             |
  |    8 | PA1    |  01 |     |      |        |     |       |                   | ADC             |
  |    9 | PA2    |  01 |     |      | TX     |     |       |                   | ADC, TX         |
  |   10 | PA3    |  01 |     |      | RX     |     |       |                   | ADC, RX         |
  |   11 | PA4    |  01 |   0 | NSS  | CK     |     |       |                   | DAC!            |
  |   12 | PA5    |  01 |   1 | SCK  |        |     |       |                   | DAC! ((-> SPI)) |
  |   13 | PA6    |  01 |     | MISO |        |     |       |                   | ADC             |
  |   14 | PA7    |  01 |     | MOSI |        |     |       |                   | ADC             |
  |   15 | PB0    |  01 |     |      |        |     |       |                   | ADC             |
  |   16 | PB1    |  01 |     |      |        |     |       |                   | ADC             |
  |   17 | PB2    |     |     |      |        |     |       | BOOT1             | B (free)        |
  |   18 | VSS    |     |     |      |        |     |       | supply            | S               |
  |   19 | VDD    |     |     |      |        |     |       | supply            | S               |
  |   20 | PA8    |     |     |      | CK     |     |     0 | CK_OUT0, (BOOT0?) | CLKOUT          |
  |   21 | PA9    |     |     |      | TX, BL |     |     0 | USB_VBUS          | USB             |
  |   22 | PA10   |     |     |      | RX, BL |     |     0 | (USB_ID)          | LED             |
  |   23 | PA11   |     |     |      |        |     |     0 | USB D-            | USB             |
  |   24 | PA12   |     |     |      |        |     |     0 | USB D+            | USB             |
  |   25 | PA13   |     |     |      |        |     |       | JTAG              | JTAG MCU        |
  |   26 | VSS    |     |     |      |        |     |       | supply            | S               |
  |   27 | VDD    |     |     |      |        |     |       | supply            | S               |
  |   28 | PA14   |     |     |      |        |     |       | JTAG              | JTAG MCU        |
  |   29 | PA15   |     |     | NSS  |        |     |       | JTAG              | JTAG MCU -> SPI |
  |   32 | PB3    |     |     | SCK  |        |     |       | JTAG              | JTAG MCU -> SPI |
  |   31 | PB4    |     |     | MISO |        |     |       | (JTAG)            | (JTAG) -> SPI   |
  |   32 | PB5    |     |     | MOSI |        |     |     2 |                   | SPI             |
  |   33 | PB6    |     |     |      | TX     | SCL |     3 |                   | I2C             |
  |   34 | PB7    |     |     |      | RX     | SDA |     3 |                   | I2C             |
  |   35 | BOOT0  |     |     |      |        |     |       | BOOT0             | S               |
  |   36 | VSS    |     |     |      |        |     |       | supply            | S               |
  |    1 | VDD    |     |     |      |        |     |       | supply            | S               |

missing:
- Vbat, RTC -> ok
- PB10..PB15 -> relocate I2C and SPI
- PB8..PB9 -> JTAG FPGA -> FPGA doesn't have JTAG anyway
- SPI is a problem:
  - The USARTs can speak SPI but very slowly.
  - NSS and SCK are only available on PA4/5 and PA15/PB3. We need those for DAC and JTAG.
  - MISO and MOSI are available on PB4/5. MISO clashes with an optional JTAG pin.
  - We only need one DAC so SCK can use PA5. This means that one channel is using the ADC
    or we have to disable SPI while measuring it.

  - Can we mix and match SPI mappings from differen positions?
    - http://www.gd32mcu.com/data/documents/shujushouce/GD32VF103_User_Manual_EN_V1.2.pdf, section 7.4.7, SPI0 AF remapping
    - It looks like this is one bit for remapping it, i.e. not possible.
    - How does this work for the third SPI position on LQFP48? -> That is for SPI1.
  - Can we use an arbitrary pin for NSS? -> doesn't matter because of ^^
- I'm only loosing JTAG for the MCU and "only" if SPI is used.
  - This is ok-ish. I can disable SPI during debug and I hope that I won't have to debug
    the SPI too much.
  - We can put the QFN-48 on the bottom or nest the footprints - at least we can try that.

TODO:
- //add solder jumper for analog function of PA5 (we cut this in case SCK has a negative impact
  on the digital function of that pin or vice versa)
- add 100R to PB4 in case programmer and FPGA are both driving it
  -> for PA15 and PB3, as well; to JTAG and to FPGA
- add test points for all SPI signals and I2C (in case we want to connect a LQFP-48 board for debugging)
